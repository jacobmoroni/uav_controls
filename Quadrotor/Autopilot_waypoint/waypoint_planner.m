function waypoint = waypoint_planner(u,P)
    pn       = u(1);  % inertial North position
    pe       = u(2);  % inertial East position
    h        = -u(3); % altitude
%     u        = u(4);  % inertial velocity along body x-axis
%     v        = u(5);  % inertial velocity along body y-axis
%     w        = u(6);  % inertial velocity along body z-axis
%     phi      = u(7);  % roll angle
%     theta    = u(8);  % pitch angle
    psi      = u(9);  % yaw angle
%     p        = u(10); % body frame roll rate
%     q        = u(11); % body frame pitch rate
%     r        = u(12); % body frame yaw rate
    t        = u(13);
    persistent i
    if t == 0
        i = 1;
    end
%     waypoints = [0, 0, 0, 2*pi;...
%                  0,0,0,0;
%                  0,0,0,0;
%                  0,0,0,0];
%    waypoints = [30 , 50 , 50 , 0   ;...
%                 30 , 50 , 50 , 0;...  
%                 20 , 50 , 0  , 0;...
%                 20 , 50 , 0  , 0;...
%                 10 , 0  , -20, 0;...
%                  0 , 20 , 15 , 0;...
%                  0 , 0  , 15 , 0;...
%                  0 , 0  , 0  , 0]; %waypoint coordinates [h;Pn;Pe;Psi]    
   waypoints = [10 , 20 , 10 , 0    ;...
                10 , 20 , 10 , -pi/6;...  
                 5 , 10 , 0  , -pi/6;...
                 5 , 10 , 0  , -pi/4;...
                 0 , 0  , -20, -pi/4;...
                 0 , 20 , 15 , -pi/2;...
                 0 , 0  , 15 , 0    ;...
                 0 , 0  , 0  , 0    ]; %waypoint coordinates [h;Pn;Pe;Psi] 
             
        waypoint = waypoints(i,:);
        error = sqrt((pn-waypoint(2))^2 + (pe-waypoint(3))^2 + ...
            (h-waypoint(1))^2);
        angle_error = sqrt((psi - waypoint(4))^2);
        if error <= P.way_rad && i < length(waypoints) ...
                && angle_error <= P.way_deg
            i = i+1;
        end

end